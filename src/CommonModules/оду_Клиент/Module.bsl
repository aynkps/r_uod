//ОМ.оду_Клиент

Процедура ОбработкаКомандыУОД_ПоОбъекту(ПараметрКоманды, ПараметрыВыполненияКоманды) 	Экспорт
	
	////Для Теста
	//ПолныйПуть = "\\pivo.local\Resource\Личные\Кириллов ПС\r\work\! НавигаторОбщий.epf";
	//ОбщаяФорма = пр_Клиент.ПолучитьФормуПоПути(ПолныйПуть, "НавигаторОбщий", "Форма");
	//ОбщаяФорма.ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды);
	//Возврат; 
	
	пр_Форма = пр_Клиент.ИсполняемыйМодуль("оду_Клиент", , пр_НастройкиПовтИсп.ТекущийПользователь());
	Если пр_Форма <> Неопределено Тогда
		пр_Форма.ОбработкаКомандыУОД_ПоОбъекту(ПараметрКоманды, ПараметрыВыполненияКоманды); 
		Возврат;
	КонецЕсли;
	
	Если ПараметрКоманды.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТипаXML = пр_Общий.ИмяТипаXMLПоСсылке(ПараметрКоманды[0]); 
	НастройкиТекущейБД = оду_ОбщийПовтИсп.НастройкиТекущейБД();	 

	МассивУчастниковОбмена = оду_ОбщийПовтИсп.МассивУчастниковОбменаПоТипуОбъекта(ИмяТипаXML, НастройкиТекущейБД, Истина);
	
	Если МассивУчастниковОбмена = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Объект не участвует в обмене через самолет";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли; 
	
		
	//Для каждого СтруктураНастроекОбмена Из МассивУчастниковОбмена Цикл
	//	//В не рабочих базах регистрация не работет
	//	Если СтруктураНастроекОбмена.ТекущаяБДРабочая = Ложь Тогда
	//		Если СтруктураНастроекОбмена.РежимОтладки = Ложь Тогда
	//			Сообщение = Новый СообщениеПользователю;
	//			Сообщение.Текст = "";
	//			Сообщение.Сообщить();
	//			Продолжить;
	//		КонецЕсли; 
	//	КонецЕсли; 
	//КонецЦикла;

	
	ТекущийПользователь = пр_НастройкиПовтИсп.ТекущийПользователь();
	
	Если МассивУчастниковОбмена.Количество() = 1 Тогда
		
		ПараметрыРегистрации = Новый Структура("МассивУчастниковОбмена, МассивОбъектовОбмена, ТекущийПользователь, НастройкиТекущейБД, ИмяТипа", 
												МассивУчастниковОбмена, ПараметрКоманды, ТекущийПользователь, НастройкиТекущейБД, ИмяТипаXML);
		//ОбработкаКомандыНаСервере(ПараметрыРегистрации);
		ЗарегистрироватьОбъектыОбменаСамолет(ПараметрыРегистрации);
		
	ИначеЕсли МассивУчастниковОбмена.Количество() > 1 Тогда
		
		//TODO: 
		////Открывать форму выбора участников обмена
		ПарамФормы = Новый Структура("МассивУчастниковОбмена, МассивОбъектовОбмена, ТекущийПользователь", МассивУчастниковОбмена, ПараметрКоманды, ТекущийПользователь);
		//ОписОповещФормы = Новый ОписаниеОповещения("ПослеВыбораУчатникаОбмена", ЭтаФорма); //ЭтаФорма, ЭтотОбъект
		//Путь = "\\pivo.local\Resource\Личные\Кириллов ПС\r\work\С_оду_БазыУчастникиОбмена.epf";
		//пр_Клиент.ОткрытьФормуВнешнейОбработки(Путь, "ФормаВыбораУчастникаОбмена", ПарамФормы, , ОписОповещФормы);
		
		ОписОповещФормы = Новый ОписаниеОповещения("ПослеВыбораУчатникаОбмена", ЭтотОбъект); //ЭтаФорма, ЭтотОбъект
		ОткрытьФорму("Справочник.оду_БазыУчастникиОбмена.Форма.ФормаВыбораУчастникаОбмена", ПарамФормы,,,,, ОписОповещФормы, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 

	КонецЕсли; 
	
КонецПроцедуры


#Область  УОД_Самолет

Процедура ПослеВыбораУчатникаОбмена(ПараметрыВыбора, Параметры) Экспорт
	
	Если ПараметрыВыбора = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
	ЗарегистрироватьОбъектыОбменаСамолет(ПараметрыВыбора);

КонецПроцедуры 

Процедура ЗарегистрироватьОбъектыОбменаСамолет(ПараметрыРегистрации)
	
	РезультатРегистрации = оду_Общий.РезультатРегистрацииОбъектовОбменаСамолет(ПараметрыРегистрации);
	Если РезультатРегистрации = Истина Тогда
		оду_Общий.ВыполнитьОбменВФоне(оду_ОбщийПовтИсп.РежимВыгрузка(), 2);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

// ОМ.оду_Клиент