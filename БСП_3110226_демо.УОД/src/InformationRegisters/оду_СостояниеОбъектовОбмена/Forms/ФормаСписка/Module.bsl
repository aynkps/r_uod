
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)  
	СписокФайловКУдалению.Очистить();	
	МассивВыбранных = Элементы.Список.ВыделенныеСтроки;
	Для каждого ИдентификаторСтроки Из МассивВыбранных Цикл
		ТекДанные = Элементы.Список.ДанныеСтроки(ИдентификаторСтроки);
		Если ЗначениеЗаполнено(ТекДанные.ИмяФайлаОбмена) Тогда
			СписокФайловКУдалению.Добавить(ТекДанные.ИмяФайлаОбмена);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	Для каждого ИмяФайлаОбмена Из СписокФайловКУдалению Цикл
		УдалитьФайлыАсинх(ИмяФайлаОбмена);	
	КонецЦикла;
	СписокФайловКУдалению.Очистить();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы   

&НаКлиенте
Процедура ВыполнитьРегламентОбмена(Команда)
	
	ВыполнитьРегламентОбменаНаСервере(); 
	
КонецПроцедуры

&НаКлиенте
Процедура СбросПовторногоИспользования(Команда)
	ОбновитьПовторноИспользуемыеЗначения();	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеОбменом(Команда)
	пр_Клиент.ОткрытьИсполняемуюФорму("оду_УправлениеОбменом", "Форма",,,,,,,,,"оду_УправлениеОбменом");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьРегламентОбменаНаСервере()
	
	Модуль = пр_НастройкиПовтИсп.ИсполняемыйМодуль("оду_Общий", пр_НастройкиПовтИсп.ТекущийПользователь()); 
	НомерВыполнения = ?(ЗначениеЗаполнено(РежимОбмена), 2, 1);
	Модуль.ВыполнитьОбменВФоне(РежимОбмена, НомерВыполнения, Истина); 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

#КонецОбласти 
